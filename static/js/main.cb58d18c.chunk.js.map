{"version":3,"sources":["components/Footer/Footer.tsx","components/DropdownList/DropdownList.tsx","config/property.tsx","components/Search/Search.tsx","components/Header/Header.tsx","components/Card/Card.tsx","components/SlidingWindowScroll/SlidingWindowScroll.tsx","apis/request.tsx","components/Sider/Sider.tsx","components/Main/Main.tsx","config/utils.tsx","components/TopJumper/TopJumper.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Footer","props","className","id","searchType$","Subject","DropdownList","useState","type","setType","value","items","map","item","index","key","onClick","e","currentTarget","next","console","log","navItem","code","text","searchItem","author","title","content","sctcItem","tc","sc","simplified","traditional","searchText$","searchData$","Search","Object","values","searchType","setSearchType","searchText","setSearchText","searchData","useEffect","subscribe","keys","find","k","pipe","debounceTime","distinctUntilChanged","onChange","target","onKeyUp","keyCode","Header","Card","ref","passRef","shortid","generate","head","body","Array","b","i","foot","SlidingWindowScroll","visibleContext","useContext","VisibleContext","$bottomElement","useRef","$topElement","lastIndex","data","length","initiateScrollObserver","observer","IntersectionObserver","callback","root","rootMargin","threshold","current","observe","entries","forEach","entry","isIntersecting","setPage","page","refVal","isLastIndex","getReference","rhythmic","chapter","section","paragraphs","notes","axiosInstance","axios","create","baseURL","timeout","request","url","params","category$","Sider","_","buttonState","setButtonState","disabled","s","Main","setData","totalPage","setTotalPage","category","setCategory","setUrl","cate","indexOf","test","from","t","join","exchangeSC","then","response","concat","pageable","pageNumber","totalPages","catch","error","finally","height","TopJumper","show","setShow","previousY","setPreviousY","fromEvent","window","scrollY","filter","throttleTime","currentY","shouldShow","scrollTo","library","add","faAngleDown","createContext","App","visible","setVisible","Provider","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cb58d18c.chunk.js","sourcesContent":["import React, { FC } from \"react\";\nimport \"./Footer.scss\";\n// import ScrollLoad from \"../ScrollLoad/ScrollLoad\";\n\nconst Footer: FC<{ ref?: any; visible: boolean }> = (props) => {\n    // const footerRef: any = createRef();\n\n    return (\n        <>\n            {/* {props.visible ? ( */}\n            <div className=\"footer\" id=\"observed-footer\">\n                <span>\n                    {/* ---------------------------到底了---------------------------- */}\n                </span>\n                {/* <ScrollLoad passRef={footerRef} text={\"foot\"}></ScrollLoad> */}\n            </div>\n            {/* ) : null} */}\n            {/* {Array.from(\n        {length: 100},\n        (text, index) => (\n          <ScrollLoad key={index} passRef={footerRef} text={`第${index+1}个元素`}></ScrollLoad>\n        )\n      )} */}\n        </>\n    );\n};\n\nexport default Footer;\n","import React, { FC, useState } from \"react\";\nimport \"./DropdownList.scss\";\n// import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Subject } from \"rxjs\";\n\nconst DropdownList: FC<{ items: string[] }> = (props) => {\n    const [type, setType] = useState(\"作者\");\n\n    // let type = \"作者\";\n\n    return (\n        <>\n            {/* <FontAwesomeIcon icon=\"angle-down\"></FontAwesomeIcon> */}\n            {/* <select\n                className=\"drop-list\"\n                id=\"drop-list\"\n                value=\"作者\"\n                onChange={(e) => {\n                    searchType$.next(e.target.value);\n                }}\n            >\n                {props.items.map((item: string, index: number) => {\n                    return (\n                        <option key={index} value={item}>\n                            {item}\n                        </option>\n                    );\n                })}\n            </select> */}\n\n            <div className=\"drop-list\">\n                <button\n                    className=\"drop-button\"\n                    value={type}\n\n                    // onChange={(e) => {\n                    //     searchType$.next(type);\n                    // }}\n                >\n                    {type}\n                </button>\n                <div className=\"drop-content\">\n                    {props.items.map((item: string, index: number) => {\n                        return (\n                            <button\n                                key={index}\n                                className=\"drop-item\"\n                                value={item}\n                                onClick={(e) => {\n                                    setType(e.currentTarget.value);\n                                    searchType$.next(e.currentTarget.value);\n                                    console.log('drop item:', e.currentTarget.value)\n                                    // searchType$.next(e.target.innerHTML);\n                                }}\n                            >\n                                {item}\n                            </button>\n                        );\n                    })}\n                </div>\n            </div>\n\n            {/* <div className=\"drop-list\">\n                <button className=\"drop-button\">作者</button>\n                <div className=\"drop-content\">\n                {props.items.map((item: string, index: number) => {\n                    return (\n                        <a key={index} href=\"drop-item\">\n                            {item}\n                        </a>\n                    );\n                })}\n                </div>\n            </div> */}\n        </>\n    );\n};\nexport const searchType$ = new Subject<string>();\nexport default DropdownList;\n","export const navItem = [\n    { code: \"shi\", text: \"诗\" },\n    { code: \"ci\", text: \"词\" },\n    { code: \"qu\", text: \"曲\" },\n    { code: \"huajianji\", text: \"花间集\" },\n    { code: \"nantang\", text: \"南唐\" },\n    { code: \"lunyu\", text: \"论语\" },\n    { code: \"shijing\", text: \"诗经\" },\n    { code: \"youmengying\", text: \"幽梦影\" },\n    { code: \"sishuwujing\", text: \"四书五经\" },\n    { code: \"mengxue\", text: \"蒙学\" },\n];\n\nexport const searchItem: any = {\n    author: \"作者\",\n    title: \"标题\",\n    content: \"内容\",\n};\n\nexport const sctcItem: any = {\n    tc: ['author', 'lunyu', 'mengxue', 'shi', 'sishuwujing'],\n    sc: ['ci', 'huajianji', 'nantang', 'qu', 'shijing', 'youmengying']\n}\n\nexport const simplified =\n    \"万与丑专业丛东丝丢两严丧个丬丰临为丽举么义乌乐乔习乡书买乱争于亏云亘亚产亩亲亵亸亿仅从仑仓仪们价众优伙会伛伞伟传伤伥伦伧伪伫体余佣佥侠侣侥侦侧侨侩侪侬俣俦俨俩俪俭债倾偬偻偾偿傥傧储傩儿兑兖党兰关兴兹养兽冁内冈册写军农冢冯冲决况冻净凄凉凌减凑凛几凤凫凭凯击凼凿刍划刘则刚创删别刬刭刽刿剀剂剐剑剥剧劝办务劢动励劲劳势勋勐勚匀匦匮区医华协单卖卢卤卧卫却卺厂厅历厉压厌厍厕厢厣厦厨厩厮县参叆叇双发变叙叠叶号叹叽吁后吓吕吗吣吨听启吴呒呓呕呖呗员呙呛呜咏咔咙咛咝咤咴咸哌响哑哒哓哔哕哗哙哜哝哟唛唝唠唡唢唣唤唿啧啬啭啮啰啴啸喷喽喾嗫呵嗳嘘嘤嘱噜噼嚣嚯团园囱围囵国图圆圣圹场坂坏块坚坛坜坝坞坟坠垄垅垆垒垦垧垩垫垭垯垱垲垴埘埙埚埝埯堑堕塆墙壮声壳壶壸处备复够头夸夹夺奁奂奋奖奥妆妇妈妩妪妫姗姜娄娅娆娇娈娱娲娴婳婴婵婶媪嫒嫔嫱嬷孙学孪宁宝实宠审宪宫宽宾寝对寻导寿将尔尘尧尴尸尽层屃屉届属屡屦屿岁岂岖岗岘岙岚岛岭岳岽岿峃峄峡峣峤峥峦崂崃崄崭嵘嵚嵛嵝嵴巅巩巯币帅师帏帐帘帜带帧帮帱帻帼幂幞干并广庄庆庐庑库应庙庞废庼廪开异弃张弥弪弯弹强归当录彟彦彻径徕御忆忏忧忾怀态怂怃怄怅怆怜总怼怿恋恳恶恸恹恺恻恼恽悦悫悬悭悯惊惧惨惩惫惬惭惮惯愍愠愤愦愿慑慭憷懑懒懔戆戋戏戗战戬户扎扑扦执扩扪扫扬扰抚抛抟抠抡抢护报担拟拢拣拥拦拧拨择挂挚挛挜挝挞挟挠挡挢挣挤挥挦捞损捡换捣据捻掳掴掷掸掺掼揸揽揿搀搁搂搅携摄摅摆摇摈摊撄撑撵撷撸撺擞攒敌敛数斋斓斗斩断无旧时旷旸昙昼昽显晋晒晓晔晕晖暂暧札术朴机杀杂权条来杨杩杰极构枞枢枣枥枧枨枪枫枭柜柠柽栀栅标栈栉栊栋栌栎栏树栖样栾桊桠桡桢档桤桥桦桧桨桩梦梼梾检棂椁椟椠椤椭楼榄榇榈榉槚槛槟槠横樯樱橥橱橹橼檐檩欢欤欧歼殁殇残殒殓殚殡殴毁毂毕毙毡毵氇气氢氩氲汇汉污汤汹沓沟没沣沤沥沦沧沨沩沪沵泞泪泶泷泸泺泻泼泽泾洁洒洼浃浅浆浇浈浉浊测浍济浏浐浑浒浓浔浕涂涌涛涝涞涟涠涡涢涣涤润涧涨涩淀渊渌渍渎渐渑渔渖渗温游湾湿溃溅溆溇滗滚滞滟滠满滢滤滥滦滨滩滪漤潆潇潋潍潜潴澜濑濒灏灭灯灵灾灿炀炉炖炜炝点炼炽烁烂烃烛烟烦烧烨烩烫烬热焕焖焘煅煳熘爱爷牍牦牵牺犊犟状犷犸犹狈狍狝狞独狭狮狯狰狱狲猃猎猕猡猪猫猬献獭玑玙玚玛玮环现玱玺珉珏珐珑珰珲琎琏琐琼瑶瑷璇璎瓒瓮瓯电画畅畲畴疖疗疟疠疡疬疮疯疱疴痈痉痒痖痨痪痫痴瘅瘆瘗瘘瘪瘫瘾瘿癞癣癫癯皑皱皲盏盐监盖盗盘眍眦眬着睁睐睑瞒瞩矫矶矾矿砀码砖砗砚砜砺砻砾础硁硅硕硖硗硙硚确硷碍碛碜碱碹磙礼祎祢祯祷祸禀禄禅离秃秆种积称秽秾稆税稣稳穑穷窃窍窑窜窝窥窦窭竖竞笃笋笔笕笺笼笾筑筚筛筜筝筹签简箓箦箧箨箩箪箫篑篓篮篱簖籁籴类籼粜粝粤粪粮糁糇紧絷纟纠纡红纣纤纥约级纨纩纪纫纬纭纮纯纰纱纲纳纴纵纶纷纸纹纺纻纼纽纾线绀绁绂练组绅细织终绉绊绋绌绍绎经绐绑绒结绔绕绖绗绘给绚绛络绝绞统绠绡绢绣绤绥绦继绨绩绪绫绬续绮绯绰绱绲绳维绵绶绷绸绹绺绻综绽绾绿缀缁缂缃缄缅缆缇缈缉缊缋缌缍缎缏缐缑缒缓缔缕编缗缘缙缚缛缜缝缞缟缠缡缢缣缤缥缦缧缨缩缪缫缬缭缮缯缰缱缲缳缴缵罂网罗罚罢罴羁羟羡翘翙翚耢耧耸耻聂聋职聍联聩聪肃肠肤肷肾肿胀胁胆胜胧胨胪胫胶脉脍脏脐脑脓脔脚脱脶脸腊腌腘腭腻腼腽腾膑臜舆舣舰舱舻艰艳艹艺节芈芗芜芦苁苇苈苋苌苍苎苏苘苹茎茏茑茔茕茧荆荐荙荚荛荜荞荟荠荡荣荤荥荦荧荨荩荪荫荬荭荮药莅莜莱莲莳莴莶获莸莹莺莼萚萝萤营萦萧萨葱蒇蒉蒋蒌蓝蓟蓠蓣蓥蓦蔷蔹蔺蔼蕲蕴薮藁藓虏虑虚虫虬虮虽虾虿蚀蚁蚂蚕蚝蚬蛊蛎蛏蛮蛰蛱蛲蛳蛴蜕蜗蜡蝇蝈蝉蝎蝼蝾螀螨蟏衅衔补衬衮袄袅袆袜袭袯装裆裈裢裣裤裥褛褴襁襕见观觃规觅视觇览觉觊觋觌觍觎觏觐觑觞触觯詟誉誊讠计订讣认讥讦讧讨让讪讫训议讯记讱讲讳讴讵讶讷许讹论讻讼讽设访诀证诂诃评诅识诇诈诉诊诋诌词诎诏诐译诒诓诔试诖诗诘诙诚诛诜话诞诟诠诡询诣诤该详诧诨诩诪诫诬语诮误诰诱诲诳说诵诶请诸诹诺读诼诽课诿谀谁谂调谄谅谆谇谈谊谋谌谍谎谏谐谑谒谓谔谕谖谗谘谙谚谛谜谝谞谟谠谡谢谣谤谥谦谧谨谩谪谫谬谭谮谯谰谱谲谳谴谵谶谷豮贝贞负贠贡财责贤败账货质贩贪贫贬购贮贯贰贱贲贳贴贵贶贷贸费贺贻贼贽贾贿赀赁赂赃资赅赆赇赈赉赊赋赌赍赎赏赐赑赒赓赔赕赖赗赘赙赚赛赜赝赞赟赠赡赢赣赪赵赶趋趱趸跃跄跖跞践跶跷跸跹跻踊踌踪踬踯蹑蹒蹰蹿躏躜躯车轧轨轩轪轫转轭轮软轰轱轲轳轴轵轶轷轸轹轺轻轼载轾轿辀辁辂较辄辅辆辇辈辉辊辋辌辍辎辏辐辑辒输辔辕辖辗辘辙辚辞辩辫边辽达迁过迈运还这进远违连迟迩迳迹适选逊递逦逻遗遥邓邝邬邮邹邺邻郁郄郏郐郑郓郦郧郸酝酦酱酽酾酿释里鉅鉴銮錾钆钇针钉钊钋钌钍钎钏钐钑钒钓钔钕钖钗钘钙钚钛钝钞钟钠钡钢钣钤钥钦钧钨钩钪钫钬钭钮钯钰钱钲钳钴钵钶钷钸钹钺钻钼钽钾钿铀铁铂铃铄铅铆铈铉铊铋铍铎铏铐铑铒铕铗铘铙铚铛铜铝铞铟铠铡铢铣铤铥铦铧铨铪铫铬铭铮铯铰铱铲铳铴铵银铷铸铹铺铻铼铽链铿销锁锂锃锄锅锆锇锈锉锊锋锌锍锎锏锐锑锒锓锔锕锖锗错锚锜锞锟锠锡锢锣锤锥锦锨锩锫锬锭键锯锰锱锲锳锴锵锶锷锸锹锺锻锼锽锾锿镀镁镂镃镆镇镈镉镊镌镍镎镏镐镑镒镕镖镗镙镚镛镜镝镞镟镠镡镢镣镤镥镦镧镨镩镪镫镬镭镮镯镰镱镲镳镴镶长门闩闪闫闬闭问闯闰闱闲闳间闵闶闷闸闹闺闻闼闽闾闿阀阁阂阃阄阅阆阇阈阉阊阋阌阍阎阏阐阑阒阓阔阕阖阗阘阙阚阛队阳阴阵阶际陆陇陈陉陕陧陨险随隐隶隽难雏雠雳雾霁霉霭靓静靥鞑鞒鞯鞴韦韧韨韩韪韫韬韵页顶顷顸项顺须顼顽顾顿颀颁颂颃预颅领颇颈颉颊颋颌颍颎颏颐频颒颓颔颕颖颗题颙颚颛颜额颞颟颠颡颢颣颤颥颦颧风飏飐飑飒飓飔飕飖飗飘飙飚飞飨餍饤饥饦饧饨饩饪饫饬饭饮饯饰饱饲饳饴饵饶饷饸饹饺饻饼饽饾饿馀馁馂馃馄馅馆馇馈馉馊馋馌馍馎馏馐馑馒馓馔馕马驭驮驯驰驱驲驳驴驵驶驷驸驹驺驻驼驽驾驿骀骁骂骃骄骅骆骇骈骉骊骋验骍骎骏骐骑骒骓骔骕骖骗骘骙骚骛骜骝骞骟骠骡骢骣骤骥骦骧髅髋髌鬓魇魉鱼鱽鱾鱿鲀鲁鲂鲄鲅鲆鲇鲈鲉鲊鲋鲌鲍鲎鲏鲐鲑鲒鲓鲔鲕鲖鲗鲘鲙鲚鲛鲜鲝鲞鲟鲠鲡鲢鲣鲤鲥鲦鲧鲨鲩鲪鲫鲬鲭鲮鲯鲰鲱鲲鲳鲴鲵鲶鲷鲸鲹鲺鲻鲼鲽鲾鲿鳀鳁鳂鳃鳄鳅鳆鳇鳈鳉鳊鳋鳌鳍鳎鳏鳐鳑鳒鳓鳔鳕鳖鳗鳘鳙鳛鳜鳝鳞鳟鳠鳡鳢鳣鸟鸠鸡鸢鸣鸤鸥鸦鸧鸨鸩鸪鸫鸬鸭鸮鸯鸰鸱鸲鸳鸴鸵鸶鸷鸸鸹鸺鸻鸼鸽鸾鸿鹀鹁鹂鹃鹄鹅鹆鹇鹈鹉鹊鹋鹌鹍鹎鹏鹐鹑鹒鹓鹔鹕鹖鹗鹘鹚鹛鹜鹝鹞鹟鹠鹡鹢鹣鹤鹥鹦鹧鹨鹩鹪鹫鹬鹭鹯鹰鹱鹲鹳鹴鹾麦麸黄黉黡黩黪黾\";\nexport const traditional =\n    \"萬與醜專業叢東絲丟兩嚴喪個爿豐臨為麗舉麼義烏樂喬習鄉書買亂爭於虧雲亙亞產畝親褻嚲億僅從侖倉儀們價眾優夥會傴傘偉傳傷倀倫傖偽佇體餘傭僉俠侶僥偵側僑儈儕儂俁儔儼倆儷儉債傾傯僂僨償儻儐儲儺兒兌兗黨蘭關興茲養獸囅內岡冊寫軍農塚馮衝決況凍淨淒涼淩減湊凜幾鳳鳧憑凱擊氹鑿芻劃劉則剛創刪別剗剄劊劌剴劑剮劍剝劇勸辦務勱動勵勁勞勢勳猛勩勻匭匱區醫華協單賣盧鹵臥衛卻巹廠廳曆厲壓厭厙廁廂厴廈廚廄廝縣參靉靆雙發變敘疊葉號歎嘰籲後嚇呂嗎唚噸聽啟吳嘸囈嘔嚦唄員咼嗆嗚詠哢嚨嚀噝吒噅鹹呱響啞噠嘵嗶噦嘩噲嚌噥喲嘜嗊嘮啢嗩唕喚呼嘖嗇囀齧囉嘽嘯噴嘍嚳囁嗬噯噓嚶囑嚕劈囂謔團園囪圍圇國圖圓聖壙場阪壞塊堅壇壢壩塢墳墜壟壟壚壘墾坰堊墊埡墶壋塏堖塒塤堝墊垵塹墮壪牆壯聲殼壺壼處備複夠頭誇夾奪奩奐奮獎奧妝婦媽嫵嫗媯姍薑婁婭嬈嬌孌娛媧嫻嫿嬰嬋嬸媼嬡嬪嬙嬤孫學孿寧寶實寵審憲宮寬賓寢對尋導壽將爾塵堯尷屍盡層屭屜屆屬屢屨嶼歲豈嶇崗峴嶴嵐島嶺嶽崠巋嶨嶧峽嶢嶠崢巒嶗崍嶮嶄嶸嶔崳嶁脊巔鞏巰幣帥師幃帳簾幟帶幀幫幬幘幗冪襆幹並廣莊慶廬廡庫應廟龐廢廎廩開異棄張彌弳彎彈強歸當錄彠彥徹徑徠禦憶懺憂愾懷態慫憮慪悵愴憐總懟懌戀懇惡慟懨愷惻惱惲悅愨懸慳憫驚懼慘懲憊愜慚憚慣湣慍憤憒願懾憖怵懣懶懍戇戔戲戧戰戩戶紮撲扡執擴捫掃揚擾撫拋摶摳掄搶護報擔擬攏揀擁攔擰撥擇掛摯攣掗撾撻挾撓擋撟掙擠揮撏撈損撿換搗據撚擄摑擲撣摻摜摣攬撳攙擱摟攪攜攝攄擺搖擯攤攖撐攆擷擼攛擻攢敵斂數齋斕鬥斬斷無舊時曠暘曇晝曨顯晉曬曉曄暈暉暫曖劄術樸機殺雜權條來楊榪傑極構樅樞棗櫪梘棖槍楓梟櫃檸檉梔柵標棧櫛櫳棟櫨櫟欄樹棲樣欒棬椏橈楨檔榿橋樺檜槳樁夢檮棶檢欞槨櫝槧欏橢樓欖櫬櫚櫸檟檻檳櫧橫檣櫻櫫櫥櫓櫞簷檁歡歟歐殲歿殤殘殞殮殫殯毆毀轂畢斃氈毿氌氣氫氬氳彙漢汙湯洶遝溝沒灃漚瀝淪滄渢溈滬濔濘淚澩瀧瀘濼瀉潑澤涇潔灑窪浹淺漿澆湞溮濁測澮濟瀏滻渾滸濃潯濜塗湧濤澇淶漣潿渦溳渙滌潤澗漲澀澱淵淥漬瀆漸澠漁瀋滲溫遊灣濕潰濺漵漊潷滾滯灩灄滿瀅濾濫灤濱灘澦濫瀠瀟瀲濰潛瀦瀾瀨瀕灝滅燈靈災燦煬爐燉煒熗點煉熾爍爛烴燭煙煩燒燁燴燙燼熱煥燜燾煆糊溜愛爺牘犛牽犧犢強狀獷獁猶狽麅獮獰獨狹獅獪猙獄猻獫獵獼玀豬貓蝟獻獺璣璵瑒瑪瑋環現瑲璽瑉玨琺瓏璫琿璡璉瑣瓊瑤璦璿瓔瓚甕甌電畫暢佘疇癤療瘧癘瘍鬁瘡瘋皰屙癰痙癢瘂癆瘓癇癡癉瘮瘞瘺癟癱癮癭癩癬癲臒皚皺皸盞鹽監蓋盜盤瞘眥矓著睜睞瞼瞞矚矯磯礬礦碭碼磚硨硯碸礪礱礫礎硜矽碩硤磽磑礄確鹼礙磧磣堿镟滾禮禕禰禎禱禍稟祿禪離禿稈種積稱穢穠穭稅穌穩穡窮竊竅窯竄窩窺竇窶豎競篤筍筆筧箋籠籩築篳篩簹箏籌簽簡籙簀篋籜籮簞簫簣簍籃籬籪籟糴類秈糶糲粵糞糧糝餱緊縶糸糾紆紅紂纖紇約級紈纊紀紉緯紜紘純紕紗綱納紝縱綸紛紙紋紡紵紖紐紓線紺絏紱練組紳細織終縐絆紼絀紹繹經紿綁絨結絝繞絰絎繪給絢絳絡絕絞統綆綃絹繡綌綏絛繼綈績緒綾緓續綺緋綽緔緄繩維綿綬繃綢綯綹綣綜綻綰綠綴緇緙緗緘緬纜緹緲緝縕繢緦綞緞緶線緱縋緩締縷編緡緣縉縛縟縝縫縗縞纏縭縊縑繽縹縵縲纓縮繆繅纈繚繕繒韁繾繰繯繳纘罌網羅罰罷羆羈羥羨翹翽翬耮耬聳恥聶聾職聹聯聵聰肅腸膚膁腎腫脹脅膽勝朧腖臚脛膠脈膾髒臍腦膿臠腳脫腡臉臘醃膕齶膩靦膃騰臏臢輿艤艦艙艫艱豔艸藝節羋薌蕪蘆蓯葦藶莧萇蒼苧蘇檾蘋莖蘢蔦塋煢繭荊薦薘莢蕘蓽蕎薈薺蕩榮葷滎犖熒蕁藎蓀蔭蕒葒葤藥蒞蓧萊蓮蒔萵薟獲蕕瑩鶯蓴蘀蘿螢營縈蕭薩蔥蕆蕢蔣蔞藍薊蘺蕷鎣驀薔蘞藺藹蘄蘊藪槁蘚虜慮虛蟲虯蟣雖蝦蠆蝕蟻螞蠶蠔蜆蠱蠣蟶蠻蟄蛺蟯螄蠐蛻蝸蠟蠅蟈蟬蠍螻蠑螿蟎蠨釁銜補襯袞襖嫋褘襪襲襏裝襠褌褳襝褲襇褸襤繈襴見觀覎規覓視覘覽覺覬覡覿覥覦覯覲覷觴觸觶讋譽謄訁計訂訃認譏訐訌討讓訕訖訓議訊記訒講諱謳詎訝訥許訛論訩訟諷設訪訣證詁訶評詛識詗詐訴診詆謅詞詘詔詖譯詒誆誄試詿詩詰詼誠誅詵話誕詬詮詭詢詣諍該詳詫諢詡譸誡誣語誚誤誥誘誨誑說誦誒請諸諏諾讀諑誹課諉諛誰諗調諂諒諄誶談誼謀諶諜謊諫諧謔謁謂諤諭諼讒諮諳諺諦謎諞諝謨讜謖謝謠謗諡謙謐謹謾謫譾謬譚譖譙讕譜譎讞譴譫讖穀豶貝貞負貟貢財責賢敗賬貨質販貪貧貶購貯貫貳賤賁貰貼貴貺貸貿費賀貽賊贄賈賄貲賃賂贓資賅贐賕賑賚賒賦賭齎贖賞賜贔賙賡賠賧賴賵贅賻賺賽賾贗讚贇贈贍贏贛赬趙趕趨趲躉躍蹌蹠躒踐躂蹺蹕躚躋踴躊蹤躓躑躡蹣躕躥躪躦軀車軋軌軒軑軔轉軛輪軟轟軲軻轤軸軹軼軤軫轢軺輕軾載輊轎輈輇輅較輒輔輛輦輩輝輥輞輬輟輜輳輻輯轀輸轡轅轄輾轆轍轔辭辯辮邊遼達遷過邁運還這進遠違連遲邇逕跡適選遜遞邐邏遺遙鄧鄺鄔郵鄒鄴鄰鬱郤郟鄶鄭鄆酈鄖鄲醞醱醬釅釃釀釋裏钜鑒鑾鏨釓釔針釘釗釙釕釷釺釧釤鈒釩釣鍆釹鍚釵鈃鈣鈈鈦鈍鈔鍾鈉鋇鋼鈑鈐鑰欽鈞鎢鉤鈧鈁鈥鈄鈕鈀鈺錢鉦鉗鈷缽鈳鉕鈽鈸鉞鑽鉬鉭鉀鈿鈾鐵鉑鈴鑠鉛鉚鈰鉉鉈鉍鈹鐸鉶銬銠鉺銪鋏鋣鐃銍鐺銅鋁銱銦鎧鍘銖銑鋌銩銛鏵銓鉿銚鉻銘錚銫鉸銥鏟銃鐋銨銀銣鑄鐒鋪鋙錸鋱鏈鏗銷鎖鋰鋥鋤鍋鋯鋨鏽銼鋝鋒鋅鋶鐦鐧銳銻鋃鋟鋦錒錆鍺錯錨錡錁錕錩錫錮鑼錘錐錦鍁錈錇錟錠鍵鋸錳錙鍥鍈鍇鏘鍶鍔鍤鍬鍾鍛鎪鍠鍰鎄鍍鎂鏤鎡鏌鎮鎛鎘鑷鐫鎳鎿鎦鎬鎊鎰鎔鏢鏜鏍鏰鏞鏡鏑鏃鏇鏐鐔钁鐐鏷鑥鐓鑭鐠鑹鏹鐙鑊鐳鐶鐲鐮鐿鑔鑣鑞鑲長門閂閃閆閈閉問闖閏闈閑閎間閔閌悶閘鬧閨聞闥閩閭闓閥閣閡閫鬮閱閬闍閾閹閶鬩閿閽閻閼闡闌闃闠闊闋闔闐闒闕闞闤隊陽陰陣階際陸隴陳陘陝隉隕險隨隱隸雋難雛讎靂霧霽黴靄靚靜靨韃鞽韉韝韋韌韍韓韙韞韜韻頁頂頃頇項順須頊頑顧頓頎頒頌頏預顱領頗頸頡頰頲頜潁熲頦頤頻頮頹頷頴穎顆題顒顎顓顏額顳顢顛顙顥纇顫顬顰顴風颺颭颮颯颶颸颼颻飀飄飆飆飛饗饜飣饑飥餳飩餼飪飫飭飯飲餞飾飽飼飿飴餌饒餉餄餎餃餏餅餑餖餓餘餒餕餜餛餡館餷饋餶餿饞饁饃餺餾饈饉饅饊饌饢馬馭馱馴馳驅馹駁驢駔駛駟駙駒騶駐駝駑駕驛駘驍罵駰驕驊駱駭駢驫驪騁驗騂駸駿騏騎騍騅騌驌驂騙騭騤騷騖驁騮騫騸驃騾驄驏驟驥驦驤髏髖髕鬢魘魎魚魛魢魷魨魯魴魺鮁鮃鯰鱸鮋鮓鮒鮊鮑鱟鮍鮐鮭鮚鮳鮪鮞鮦鰂鮜鱠鱭鮫鮮鮺鯗鱘鯁鱺鰱鰹鯉鰣鰷鯀鯊鯇鮶鯽鯒鯖鯪鯕鯫鯡鯤鯧鯝鯢鯰鯛鯨鯵鯴鯔鱝鰈鰏鱨鯷鰮鰃鰓鱷鰍鰒鰉鰁鱂鯿鰠鼇鰭鰨鰥鰩鰟鰜鰳鰾鱈鱉鰻鰵鱅鰼鱖鱔鱗鱒鱯鱤鱧鱣鳥鳩雞鳶鳴鳲鷗鴉鶬鴇鴆鴣鶇鸕鴨鴞鴦鴒鴟鴝鴛鴬鴕鷥鷙鴯鴰鵂鴴鵃鴿鸞鴻鵐鵓鸝鵑鵠鵝鵒鷳鵜鵡鵲鶓鵪鶤鵯鵬鵮鶉鶊鵷鷫鶘鶡鶚鶻鶿鶥鶩鷊鷂鶲鶹鶺鷁鶼鶴鷖鸚鷓鷚鷯鷦鷲鷸鷺鸇鷹鸌鸏鸛鸘鹺麥麩黃黌黶黷黲黽\";\n","import React, { FC, useState, useEffect } from \"react\";\nimport DropdownList, { searchType$ } from \"../DropdownList/DropdownList\";\nimport \"./Search.scss\";\nimport { Subject } from \"rxjs\";\nimport { debounceTime, distinctUntilChanged } from \"rxjs/operators\";\nimport { searchItem } from \"../../config/property\";\n\nconst Search: FC<{ type?: string }> = (props) => {\n    const items: string[] = Object.values(searchItem);\n\n    const [searchType, setSearchType] = useState(\"author\");\n    const [searchText, setSearchText] = useState(\"\");\n\n    // const [searchData, setSearchData] = useState();\n    let searchData: string[] = [];\n\n    useEffect(() => {\n        searchType$.subscribe((type: string) => {\n            const key: string | any = Object.keys(searchItem).find(\n                (k) => searchItem[k] === type\n            );\n            setSearchType(key);\n            console.log(\"type:\", key);\n        });\n\n        searchText$\n            .pipe(debounceTime(500), distinctUntilChanged())\n            .subscribe((searchText: any) => {\n                setSearchText(searchText);\n                console.log(searchText);\n            });\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return (\n        <div className=\"search\">\n            <div className=\"header-left\"></div>\n            <DropdownList items={items}></DropdownList>\n            {/* <input className=\"search-content\" type=\"text\" id=\"search\" /> */}\n            <input\n                className=\"search-content\"\n                type=\"text\"\n                id=\"search\"\n                onChange={(e) => {\n                    searchText$.next(e.target.value);\n                }}\n                onKeyUp={(e) => {\n                    if (e.keyCode === 13) {\n                        searchData = [searchType, e.currentTarget.value];\n                        console.log(searchData);\n                        searchData$.next(searchData);\n                    }\n                }}\n            />\n            <button\n                className=\"search-button\"\n                onClick={(e) => {\n                    // if (\n                    //     sctcItem.sc.indexOf(searchType) &&\n                    //     /[\\u4e00-\\u9fa5]/g.test(searchText)\n                    // ) {\n                    //     changedText = exchange(searchText)\n                    // }\n                    // setSearchText(changedText);\n                    // console.log(`searchText: ${searchText}`);\n                    searchData = [searchType, searchText];\n                    console.log(searchData);\n                    searchData$.next(searchData);\n                }}\n            >\n                搜索\n            </button>\n            <div className=\"header-right\"></div>\n            {/* <label htmlFor=\"search\">搜索</label> */}\n        </div>\n    );\n};\nexport const searchText$ = new Subject<string>();\nexport const searchData$ = new Subject<string[]>();\nexport default Search;\n","import React, { FC } from \"react\";\n// import ScrollLoad from \"../ScrollLoad/ScrollLoad\";\nimport Search from \"../Search/Search\";\nimport \"./Header.scss\";\n\nconst Header: FC = () => {\n    return (\n        <div>\n            <h1>S · C · Q</h1>\n            <Search></Search>\n\n            {/* <ScrollLoad></ScrollLoad> */}\n            {/* <ScrollLoad text={'aaaa'}></ScrollLoad> */}\n        </div>\n    );\n};\n\nexport default Header;\n","import React, { FC } from \"react\";\nimport './Card.scss';\nimport shortid from \"shortid\";\n\nconst Card: FC<{id: string, passRef?: any, head: (string | undefined)[], body: string[] | string | undefined, notes?: string[], foot?: string}> = (props: any) => {\n    return (\n      <div className=\"card-container\" ref={props.passRef} id={props.id}>\n        <div className=\"card\"  key={shortid.generate()}>\n          <div className=\"card-head\">\n            <blockquote className=\"title\">{props.head[0]}</blockquote>\n            {/* <br/> */}\n            <blockquote className=\"author\">{props.head[1]}</blockquote>\n          </div>\n\n          <div className=\"card-body\">\n              {props.body instanceof Array ? props.body.map((b: any, i: number) => <blockquote key={i}>{b}</blockquote>) : <blockquote>{props.body}</blockquote>}\n            {/* <blockquote>{props.body}</blockquote> */}\n          </div>\n\n          {props.foot ? (\n            <div className=\"card-footer\">\n              <blockquote>{props.foot}</blockquote>\n            </div>\n          ) : null}\n        </div>\n      </div>\n    );\n}\n\nexport default Card;","import React, { FC, useContext, useEffect, useRef } from \"react\";\n// import { CSSTransition } from \"react-transition-group\";\nimport { VisibleContext } from \"../../App\";\nimport { Poetry } from \"../../model/data\";\nimport Card from \"../Card/Card\";\nimport \"./SlidingWindowScroll.scss\";\n\nconst SlidingWindowScroll: FC<{\n    data: any;\n    height: number;\n    page: number;\n    setPage: any;\n    category: string;\n}> = (props) => {\n    // const [observer, setObserver] = useState<IntersectionObserver>();\n    const visibleContext = useContext(VisibleContext); //useless\n\n    const $bottomElement: any = useRef();\n    const $topElement: any = useRef();\n\n    const lastIndex: number = props.data.length - 1;\n\n    useEffect(() => {\n        console.log(\"sliding effect......, data: \", props.data);\n        initiateScrollObserver();\n        // return () => {\n        //     resetObservation();\n        // };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [props.data]);\n\n    const initiateScrollObserver = () => {\n        const options = {\n            root: null,\n            rootMargin: \"0px\",\n            threshold: 0.1,\n        };\n        const observer = new IntersectionObserver(callback, options);\n        if ($topElement.current) {\n            // console.log('observing top element.');\n            observer.observe($topElement.current);\n        }\n        if ($bottomElement.current) {\n            // console.log('observing bottom element.');\n            observer.observe($bottomElement.current);\n        }\n\n        // setObserver(observer);\n    };\n\n    const callback = (entries: any[], observer: any) => {\n        entries.forEach((entry: any, index: any) => {\n            if (entry.isIntersecting && entry.target.id === \"bottom\") {\n                // console.log('bottom enter.');\n                props.setPage(props.page + 1);\n\n                visibleContext(true); //useless\n                // console.log('visible: ', visibleContext); //useless\n            }\n            if (entry.isIntersecting && entry.target.id === \"top\") {\n                // console.log('top enter.');\n                visibleContext(false); //useless\n            }\n        });\n    };\n\n    // const resetObservation = () => {\n    //     observer && observer.unobserve($topElement.current);\n    //     observer && observer.unobserve($bottomElement.current);\n    // };\n\n    const getReference = (index: number, isLastIndex: boolean) => {\n        if (index === 0) {\n            // console.log('top')\n            return $topElement;\n        }\n        if (isLastIndex) {\n            // console.log('bottom')\n            return $bottomElement;\n        }\n        return null;\n    };\n\n    return (\n        <div className=\"ul-container\">\n            {/* <CSSTransition\n                in={true}\n                timeout={500}\n                classNames=\"fade\"\n                appear={true}\n                unmountOnExit\n            > */}\n            <ul className=\"main-content\">\n                {props.data.map((item: Poetry, index: number) => {\n                    // const top = (props.height * (index + start)) + 'px';\n                    const refVal = getReference(index, index === lastIndex);\n                    const id =\n                        index === 0\n                            ? \"top\"\n                            : index === lastIndex\n                            ? \"bottom\"\n                            : \"\";\n\n                    const head = (): (string | undefined)[] => {\n                        if (!item.title && item.rhythmic) {\n                            return [item.rhythmic, item.author];\n                        } else if (\n                            !item.title &&\n                            !item.rhythmic &&\n                            item.chapter\n                        ) {\n                            return [item.chapter, item.author];\n                        } else if (item.title && item.chapter && item.section) {\n                            return [\n                                item.chapter + \"·\" + item.section,\n                                item.title,\n                            ];\n                        } else {\n                            return [item.title, item.author];\n                        }\n                    };\n                    const body = (): string[] | undefined => {\n                        if (!item.paragraphs) {\n                            return item.content;\n                        } else {\n                            return item.paragraphs;\n                        }\n                    };\n                    // console.log(`top: ${top}, index: ${index}, lastIndex: ${lastIndex}, refVal: ${refVal}, id: ${id}`);\n                    return (\n                        // props.list.map((shi: Shi) => (\n                        <Card\n                            key={index}\n                            id={id}\n                            head={head()}\n                            body={body()}\n                            notes={item.notes}\n                            passRef={refVal}\n                        ></Card>\n\n                        //   ))\n                        // <li className=\"li-card\" key={index} ref={refVal} id={id}>{`${item.title} ${item.author} ${item.paragraphs}`}</li>\n                    );\n                })}\n            </ul>\n            {/* </CSSTransition> */}\n        </div>\n    );\n};\n\nexport default SlidingWindowScroll;\n","import axios from \"axios\";\n\nconst baseUrl = \"http://localhost:8080/\";\n\n// const shiUrl = baseUrl + 'shi';\n// const ciUrl = baseUrl + 'ci';\n// const quUrl = baseUrl + 'qu';\n\nconst axiosInstance = axios.create({\n    baseURL: baseUrl,\n    timeout: 20000,\n});\n\nconst request = (\n    url: string,\n    params: any,\n    method='get',\n    // ...rest\n) => {\n    return axiosInstance({\n        url, params\n    })\n        // .then((response) => {\n        //     console.log(response.data);\n        // })\n        // .catch((error) => {\n        //     return \"fail\";\n        // });\n};\n\nexport default request;\n","import React, { FC, useState } from \"react\";\nimport \"./Sider.scss\";\nimport { Subject } from \"rxjs\";\nimport { navItem } from \"../../config/property\";\n\nconst Sider: FC = () => {\n    const [buttonState, setButtonState] = useState(\n        [...Array(navItem.length)].map((_) => false)\n    );\n\n    // const category$ = new Subject();\n\n    return (\n        <div className=\"menu\">\n            <ul className=\"menu-option\">\n                {navItem\n                    .map((item) => [item.code, item.text])\n                    .map((item: string[], index: number) => {\n                        return (\n                            <li key={index}>\n                                <button\n                                    className=\"nav-button\"\n                                    disabled={buttonState[index]}\n                                    onClick={(e) => {\n                                        setButtonState(\n                                            buttonState.map((s, i) => {\n                                                if (i === index) {\n                                                    s = true;\n                                                } else s = false;\n                                                return s;\n                                            })\n                                        );\n\n                                        // const category$ = new Subject<string>();\n                                        category$.next(item[0]);\n                                        // category$.complete();\n                                        // console.log(\"类别：\", item[1]);\n                                    }}\n                                >\n                                    {item[1]}\n                                </button>\n                            </li>\n                        );\n                    })}\n            </ul>\n        </div>\n    );\n};\n// export category$;\nexport const category$ = new Subject<string>();\nexport default Sider;\n","// import { fromEvent } from 'rxjs';\nimport React, { FC, useEffect, useState } from \"react\";\nimport SlidingWindowScroll from \"../SlidingWindowScroll/SlidingWindowScroll\";\n// import Card from \"../Card/Card\";\nimport \"./Main.scss\";\nimport request from \"../../apis/request\";\nimport { category$ } from \"../Sider/Sider\";\nimport { searchData$ } from \"../Search/Search\";\nimport { sctcItem } from \"../../config/property\";\nimport { exchangeTC, exchangeSC } from \"../../config/utils\";\n\nconst Main: FC<{ setVisible?: any; initial?: number }> = (props) => {\n    // const [showData, setShowData] = useState(false);\n    const [data, setData] = useState<any>([]);\n    const [page, setPage] = useState(0);\n    const [totalPage, setTotalPage] = useState(1);\n    const [category, setCategory] = useState(\"shi\");\n\n    const [url, setUrl] = useState(\"shi/\");\n\n    useEffect(() => {\n        console.log(\"main effect......, page: \", page);\n        category$.subscribe((cate: string) => {\n            // console.log(`before changing category, cate:${cate}, category:${category}, page:${page}, url:${url}`);\n            if (cate !== category) {\n                setData([]);\n                setPage(0);\n                setCategory(cate);\n                setUrl(cate + \"/\");\n            }\n        });\n\n        searchData$.subscribe((data: string[]) => {\n            // let searchContent = '';\n            if (\n                sctcItem.sc.indexOf(category) &&\n                /[\\u4e00-\\u9fa5]/g.test(data[1])\n            ) {\n                data[1] = exchangeTC(data[1]);\n            } else if (\n                sctcItem.tc.indexOf(category) &&\n                /[\\u4e00-\\u9fa5]/g.test(data[1])\n            ) {\n                data[1] = exchangeSC(data[1]);\n            }\n            // console.log(`searchText: ${data[1]}`);\n\n            setData([]);\n            setPage(0);\n            if (category === \"ci\" && data[0] === \"title\") {\n                setUrl(category + \"/rhythmic/\" + data[1]);\n            } else setUrl(category + \"/\" + data.join(\"/\"));\n        });\n\n        if (page < totalPage) {\n            request(url, {\n                page: page,\n            })\n                .then((response) => {\n                    console.log(response.data);\n                    setData(data.concat(response.data.content));\n                    setPage(response.data.pageable.pageNumber);\n                    setTotalPage(\n                        response.data.totalPages === 0\n                            ? 1\n                            : response.data.totalPages\n                    );\n                    console.log(\"data: \", data);\n                })\n                .catch((error) => {\n                    return \"fail\";\n                })\n                .finally(() => {\n                    console.log(\n                        `after changing category, category:${category}, page:${page}, url:${url}`\n                    );\n                });\n        }\n\n        // return () => {\n        //     category$.unsubscribe();\n        //     searchData$.unsubscribe();\n        // }\n\n        // getShi(\"http://localhost:8080/shi/author/李白\");\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [url, page]);\n\n    return (\n        <>\n            <div className=\"main-container\">\n                {/* {(data.length === 1 && data[0].id === \"\") || (data.length === 0)? null : ( */}\n                <SlidingWindowScroll\n                    data={data}\n                    height={195}\n                    page={page}\n                    setPage={setPage}\n                    category={category}\n                ></SlidingWindowScroll>\n                {/* )} */}\n            </div>\n        </>\n    );\n};\n\nexport default Main;\n","import { traditional, simplified } from \"./property\";\nexport const exchangeTC = (text: string) => {\n    const exchangedText = Array.from(text)\n        .map((t) => {\n            const index = simplified.indexOf(t);\n            if (index === -1) {\n                return t;\n            } else return traditional[index];\n        }).join('');\n    // console.log(`exchangedText: ${exchangedText}`);\n    return exchangedText;\n};\n\nexport const exchangeSC = (text: string) => {\n    const exchangedText = Array.from(text)\n        .map((t) => {\n            const index = traditional.indexOf(t);\n            if (index === -1) {\n                return t;\n            } else return simplified[index];\n        }).join('');\n    // console.log(`exchangedText: ${exchangedText}`);\n    return exchangedText;\n};\n// Array.from(text)\n//     .map((t) => {\n//         const index = simplified.indexOf(t);\n//         console.log(`index: ${index}`)\n//         const x = traditional[index];\n//         console.log(`x: ${x}`);\n//         return x;\n//     })\n//     .toString();\n","import React, { FC, useEffect, useState } from \"react\";\nimport { fromEvent } from \"rxjs\";\nimport { filter, map, throttleTime } from \"rxjs/operators\";\nimport \"./TopJumper.scss\";\n\nconst TopJumper: FC<{}> = (props) => {\n    const [show, setShow] = useState(false);\n    const [previousY, setPreviousY] = useState(0);\n\n    useEffect(() => {\n        const scroll = fromEvent(window, \"scroll\").pipe(\n            map(() => window.scrollY),\n            filter((_) => window.scrollY > 1000),\n            throttleTime(1000)\n        );\n        scroll.subscribe((currentY) => {\n            // console.log(\"Y*********\", window.scrollY, currentY, previousY);\n            const shouldShow =\n                window.scrollY > 1000 && currentY - previousY > 0;\n            // console.log(\n            //     \"********************, shouldShow: \" +\n            //         shouldShow +\n            //         \", show: \" +\n            //         show\n            // );\n            if (shouldShow !== show) {\n                setShow(shouldShow);\n                setPreviousY(currentY);\n            }\n            // setShow(true);\n        });\n    }, [previousY, show]);\n\n    return show ? (\n        <>\n            <div\n                className=\"top-jumper\"\n                onClick={() => {\n                    window.scrollTo(0, 0);\n                    // setShow(false);\n                }}\n            >\n                <span className=\"text\"></span>\n            </div>\n        </>\n    ) : null;\n};\n\nexport default TopJumper;\n","import React, { createContext, Dispatch, useState } from \"react\";\nimport \"./App.scss\";\nimport Footer from \"./components/Footer/Footer\";\nimport Header from \"./components/Header/Header\";\nimport Main from \"./components/Main/Main\";\nimport Sider from \"./components/Sider/Sider\";\n// import BackTop from \"./components/BackTop/BackTop\";\nimport TopJumper from \"./components/TopJumper/TopJumper\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faAngleDown } from \"@fortawesome/free-solid-svg-icons\";\nlibrary.add(faAngleDown);\n\nexport const VisibleContext = createContext(\n    {} as Dispatch<React.SetStateAction<boolean>>\n);\n\nconst App: React.FC = () => {\n    // const VisibleContext = createContext(setVisible);\n    const [visible, setVisible] = useState(false);\n\n    return (\n        <div className=\"App\">\n            <header>\n                <Header></Header>\n            </header>\n            <div className=\"content\">\n                <div className=\"left-blank\"></div>\n                <aside>\n                    <Sider></Sider>\n                </aside>\n                <article>\n                    <VisibleContext.Provider value={setVisible}>\n                        <Main setVisible={setVisible}></Main>\n                    </VisibleContext.Provider>\n                </article>\n                <aside>\n                    {/* <BackTop visible={visible}></BackTop> */}\n                    <TopJumper></TopJumper>\n                    {/* <Sider></Sider> */}\n                </aside>\n                <div className=\"right-blank\"></div>\n            </div>\n            <footer>\n                <Footer visible={visible}></Footer>\n            </footer>\n        </div>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\n\n// const render = (Component: any) => {\nReactDOM.render(\n  <BrowserRouter>\n      <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n// }\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}